trigger:
  branches:
    include:
      - main

pool:
  name: Default  # Self-hosted Agent
  demands:
    - terraform

variables:
  TF_VERSION: '1.6.6'

stages:
  - stage: SubscriptionCreate
    jobs:
      - job: Create
        steps:
          - task: UseTerraform@0
            inputs:
              terraformVersion: '$(TF_VERSION)'

          - script: |
              echo "##[group]Step 1: GitHub から clone 開始"
              git clone https://github.com/kawaiTakeru/terraform-subscription-test.git
              cd terraform-subscription-test/terraform
              echo "##[endgroup]"

              echo "##[group]Step 2: terraform init 開始"
              terraform init
              echo "##[endgroup]"

              echo "##[group]Step 3: terraform plan 開始"
              terraform plan
              echo "##[endgroup]"

              echo "##[group]Step 4: terraform apply 開始"
              terraform apply -auto-approve
              echo "##[endgroup]"

              echo "##[group]Step 5: Slack通知"
              echo "Slack通知は別ステップで送信"
              echo "##[endgroup]"

              echo "##[group]Step 6: 完了 ✅"
              echo "✅ サブスクリプション作成成功 ✅"
              echo "##[endgroup]"
            displayName: 'Run Terraform (Subscription Create)'

          - task: PowerShell@2
            displayName: 'Slack通知（成功）'
            condition: succeeded()
            inputs:
              targetType: 'inline'
              script: |
                $webhookUrl = "${env:SLACK_WEBHOOK_URL}"
                $payload = @{ text = "✅ サブスクリプション作成成功 ✅" } | ConvertTo-Json
                Invoke-RestMethod -Uri $webhookUrl -Method Post -ContentType 'application/json' -Body $payload

          - task: PowerShell@2
            displayName: 'Slack通知（失敗）'
            condition: failed()
            inputs:
              targetType: 'inline'
              script: |
                $webhookUrl = "${env:SLACK_WEBHOOK_URL}"
                $payload = @{ text = "❌ サブスクリプション作成失敗 ❌" } | ConvertTo-Json
                Invoke-RestMethod -Uri $webhookUrl -Method Post -ContentType 'application/json' -Body $payload
